#include <stdio.h>
#include <stdarg.h>

int _printf(const char *format, ...) {
va_list args;
va_start(args, format);
int count = 0;

while (*format) {
if (*format == '%') {
format++; // Move past '%'

// Handle conversion specifiers
switch (*format) {
case 'c': {
char c = va_arg(args, int);
putchar(c);
count++;
break;
}
case 's': {
char* str = va_arg(args, char*);
while (*str) {
putchar(*str);
str++;
count++;
}
break;
}
case '%': {
putchar('%');
count++;
break;
}
default: {
// If an unsupported specifier is used, we'll just print the '%'
putchar('%');
putchar(*format);
count += 2;
break;
}
}
} else {
putchar(*format);
count++;
}
format++;
}

va_end(args);
return count;
}

int main() {
_printf("Let's print a simple sentence.\n");
_printf("%c", 'S');
_printf("A char inside a sentence: %c. Did it work?\n", 'F');
_printf("Let's see if the cast is correctly done: %c. Did it work?\n", 48);
_printf("%s", "This sentence is retrieved from va_args!\n");
_printf("Complete the sentence: You %s nothing, Jon Snow.\n", "know");
_printf("Complete the sentence: You %s nothing, Jon Snow.\n", (char *)0);
_printf("%c%cth %s%s a%cg%s: Y%sou %s no%ching%s Snow.%c", 'W', 'i', "some ", "more", 'r', "s", "", "know", 't', ", Jon", '\n');
_printf("%%");
_printf("Should print a single percent sign: %%\n");
_printf("%s%c%c%c%s%%%s%c", "Loading ", '.', '.', '.', " 99", " Please wait", '\n');
_printf("css%ccs%scscscs", 'T', "Test");

char str[] = "This is a big string!";
_printf(str);

_printf("man gcc:\n%s", str);

_printf(NULL); // Testing NULL input
_printf("%c", '\0'); // Testing null terminator
_printf("%"); // Testing invalid specifier

return 0;
}

